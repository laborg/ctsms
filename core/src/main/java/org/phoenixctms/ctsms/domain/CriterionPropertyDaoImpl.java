// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;

import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.phoenixctms.ctsms.compare.ComparatorFactory;
import org.phoenixctms.ctsms.enumeration.DBModule;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.CriterionPropertyVO;
import org.phoenixctms.ctsms.vo.CriterionRestrictionVO;

/**
 * @see CriterionProperty
 */
public class CriterionPropertyDaoImpl
		extends CriterionPropertyDaoBase {

	private final static Comparator<CriterionRestrictionVO> CRITERION_RESTRICTION_ID_COMPARATOR = 
			ComparatorFactory.createSafeLong(CriterionRestrictionVO::getId);

	private org.hibernate.Criteria createPropertyCriteria() {
		org.hibernate.Criteria propertyCriteria = this.getSession().createCriteria(CriterionProperty.class);
		propertyCriteria.setCacheable(true);
		return propertyCriteria;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public CriterionProperty criterionPropertyVOToEntity(CriterionPropertyVO criterionPropertyVO) {
		CriterionProperty entity = this.loadCriterionPropertyFromCriterionPropertyVO(criterionPropertyVO);
		this.criterionPropertyVOToEntity(criterionPropertyVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void criterionPropertyVOToEntity(
			CriterionPropertyVO source,
			CriterionProperty target,
			boolean copyIfNull) {
		// TODO verify behavior of criterionPropertyVOToEntity
		super.criterionPropertyVOToEntity(source, target, copyIfNull);
		Collection validRestrictions = source.getValidRestrictions();
		if (copyIfNull || validRestrictions.size() > 0) {
			this.getCriterionRestrictionDao().criterionRestrictionVOToEntityCollection(validRestrictions); // copy if null cannot be passed; copy if null is always true
			target.setValidRestrictions(validRestrictions);
		}
	}

	@Override
	protected Collection<CriterionProperty> handleFindByModule(DBModule module)
			throws Exception {
		org.hibernate.Criteria propertyCriteria = createPropertyCriteria();
		if (module != null) {
			propertyCriteria.add(Restrictions.eq("module", module));
		}
		propertyCriteria.addOrder(Order.asc("id"));
		return propertyCriteria.list();
	}

	@Override
	protected CriterionProperty handleFindByNameL10nKey(String nameL10nKey) throws Exception {
		if (nameL10nKey != null) {
			org.hibernate.Criteria propertyCriteria = createPropertyCriteria();
			propertyCriteria.add(Restrictions.eq("nameL10nKey", nameL10nKey));
			propertyCriteria.setMaxResults(1);
			return (CriterionProperty) propertyCriteria.uniqueResult();
		} else {
			return null;
		}
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private CriterionProperty loadCriterionPropertyFromCriterionPropertyVO(CriterionPropertyVO criterionPropertyVO) {
		CriterionProperty criterionProperty = null;
		Long id = criterionPropertyVO.getId();
		if (id != null) {
			criterionProperty = this.load(id);
		}
		if (criterionProperty == null) {
			criterionProperty = CriterionProperty.Factory.newInstance();
		}
		return criterionProperty;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public CriterionPropertyVO toCriterionPropertyVO(final CriterionProperty entity) {
		return super.toCriterionPropertyVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toCriterionPropertyVO(
			CriterionProperty source,
			CriterionPropertyVO target) {
		super.toCriterionPropertyVO(source, target);
		target.setValidRestrictions(toCriterionRestrictionVOCollection(source.getValidRestrictions()));
		target.setName(L10nUtil.getCriterionPropertyName(Locales.USER, source.getNameL10nKey()));
	}

	private ArrayList<CriterionRestrictionVO> toCriterionRestrictionVOCollection(Collection<CriterionRestriction> validRestrictions) { // lazyload persistentset prevention
		// related to http://forum.andromda.org/viewtopic.php?t=4288
		CriterionRestrictionDao criterionRestrictionDao = this.getCriterionRestrictionDao();
		ArrayList<CriterionRestrictionVO> result = new ArrayList<CriterionRestrictionVO>(validRestrictions.size());
		Iterator<CriterionRestriction> it = validRestrictions.iterator();
		while (it.hasNext()) {
			result.add(criterionRestrictionDao.toCriterionRestrictionVO(it.next()));
		}
		result.sort(CRITERION_RESTRICTION_ID_COMPARATOR);
		return result;
	}
}